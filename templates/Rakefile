require "yaml"
require "English"
require "fileutils"

def exec_and_abort_if_fail(cmd)
  status = system cmd
  $stderr.puts "`#{cmd}` failed." unless $CHILD_STATUS.exitstatus.zero?
  abort unless $CHILD_STATUS.exitstatus.zero?
  status
end

def vagrant(args)
  puts "Running vagrant #{args}"
  Bundler.with_clean_env do
    exec_and_abort_if_fail "vagrant #{args}"
  end
end

desc "install required roles"
task :setup do |_t|
  sh "ansible-galaxy install -r requirements.yml"
end

inventory_file = "inventories/default.yml"
inventory = YAML.load_file(inventory_file)

inventory["all"]["hosts"].each_key do |name|
  namespace name do
    desc "vagrant up #{name}"
    task :up do |_t|
      vagrant "up #{name}"
    end

    desc "vagrant provision #{name}"
    task :provision do |_t|
      vagrant "provision #{name}"
    end

    desc "vagrant halt #{name}"
    task :halt do |_t|
      vagrant "halt #{name}"
    end

    desc "vagrant package #{name}"
    task :package do |_t|
      vagrant "package --output #{name}.box #{name}"
    end

    desc "vagrant destroy #{name}"
    task :destroy do |_t|
      vagrant "destroy -f #{name}"
    end

    desc "build #{name}"
    task build: [:up, :halt, :package]

    desc "create OVA"
    task :ova do |_t|
      guestos_map = {
        "freebsd" => "freebsd-64",
        "openbsd" => "other-64",
      }
      os = name.split("-")[1]
      raise "cannot determine os name from `#{name}`" if os.nil? || os.empty?
      raise "os `#{os}` is not defined in the Rakefile" unless guestos_map.key?(os)
      guestos = guestos_map[os]
      sh "tar -C ova -zxf #{name}.box"
      File.open("ova/#{name}.vmx", "w") do |w|
        File.open("ova/example.vmx", "r") do |r|
          r.each_line do |l|
            w.puts l.gsub("%%%BOXNAME%%%", name).gsub("%%%GUESTOS%%%", guestos)
          end
        end
      end
      sh "(cd ova && ovftool #{name}.vmx #{name}.ova)"
    end
  end
end

desc "clean everything"
task :clean do |_t|
  begin
    vagrant "destroy -f"
  ensure
    FileUtils.rm_rf ["*.ova", "roles.galaxy/*", "*.retry"], :secure => true
  end
end
